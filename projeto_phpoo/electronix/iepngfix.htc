<public:component>
    <public:attach event="onpropertychange" onevent="doFix(event)" />

    <script type="text/javascript">
        if (typeof blankImg == 'undefined') var blankImg = 'blank.gif';

        var f = 'DXImageTransform.Microsoft.AlphaImageLoader';

        function filt(s, m) {
            if (filters && filters[f]) {
                filters[f].enabled = !!s;
                if (s) {
                    filters[f].src = s;
                    filters[f].sizingMethod = m;
                }
            } else if (s) {
                style.filter = 'progid:' + f + '(src="' + s + '",sizingMethod="' + m + '")';
            }
        }

        function doFix(e) {
            if (!/MSIE (5\.5|6\.)/.test(navigator.userAgent) || 
                (e && !/(background|src)/.test(e.propertyName))) return;

            var bgImg = currentStyle.backgroundImage || style.backgroundImage;
            if (tagName === 'IMG' && /\.png$/i.test(src)) {
                if (currentStyle.width === 'auto' && currentStyle.height === 'auto') 
                    style.width = offsetWidth + 'px';
                filt(src, 'scale');
                src = blankImg;
            } else if (bgImg && bgImg !== 'none' && bgImg.match(/^url[("']+(.*\.png)[)"']+$/i)) {
                var s = RegExp.$1;
                if (currentStyle.width === 'auto' && currentStyle.height === 'auto') 
                    style.width = offsetWidth + 'px';
                style.backgroundImage = 'none';
                filt(s, 'crop');
                for (var n = 0; n < childNodes.length; n++) {
                    if (childNodes[n].style) 
                        childNodes[n].style.position = 'relative';
                }
            } else {
                filt();
            }
        }

        doFix();
    </script>
</public:component>


